language: r
sudo: false
cache: packages
warnings_are_errors: true
use_bioc: true
bioc_required: true
cran: http://cran.rstudio.com
dist: trusty
os:
- linux
- osx
osx_image: xcode9
env:
  global:
  - R_BUILD_ARGS="--no-manual"
  - R_CHECK_ARGS="--as-cran --install-args=--build"
  - RGL_USE_NULL=TRUE
  - WARNINGS_ARE_ERRORS=1
  - PROJECT_NAME=neuroconductor
  - DISPLAY=:99.0
before_install:
- ulimit -n 2048
- export LD_LIBRARY_PATH=/usr/local/clang/lib:${LD_LIBRARY_PATH}
- export PROJ_DIR=`basename $PWD`
- echo "travis_wait*\.log$" >> .Rbuildignore
- fname=travis_helpers.sh
- wget -O ${fname} http://bit.ly/travis_helpers
- cat ${fname}; source ${fname}; rm ${fname}
- cat DESCRIPTION
- start_xvfb ;
- export PACKAGE_NAME=`package_name`
- export RCHECK_DIR=${PACKAGE_NAME}.Rcheck
- Rscript -e 'source("https://install-github.me/mangothecat/callr")'
- remove_neuroc_packages
- export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
- x=`export_clang_cxx`; eval ${x}
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then no_open_mp ; fi
- echo "CC=${CC}, CXX=${CXX}, CXX1X=${CXX1X}"
- echo "CXX1XSTD=${CXX1XSTD}, CXX11=${CXX11}"
- clang_cxx
- export cmake_version="3.11"
- cmake --version
- x=`cmake_setup`; echo "${x}"; eval ${x};
- cmake --version
- export ants_user=neuroconductor
- echo "Installing Missing Deps ITKR"
- install_missing_remote_deps ${ants_user}/ITKR
- gh_binary_install ${ants_user}/ITKR ;
- if [[ "${PACKAGE_NAME}" == "ITKR" || "${PACKAGE_NAME}" == "ANTsRCore" || "${PACKAGE_NAME}"
  == "ANTsR" ]]; then export R_BUILD_ARGS="${R_BUILD_ARGS} --no-build-vignettes "
  ; fi
- if [[ "${PACKAGE_NAME}" != "ITKR" ]]; then echo "Installing Missing Deps ANTsRCore"
  ; install_missing_remote_deps ${ants_user}/ANTsRCore; gh_binary_install ${ants_user}/ANTsRCore
  ; fi
- if [[ "${PACKAGE_NAME}" != "ANTsRCore" && "${PACKAGE_NAME}" != "ITKR" ]]; then echo
  "Installing Missing Deps ANTsR" ; install_missing_remote_deps ${ants_user}/ANTsR
  ; gh_binary_install ${ants_user}/ANTsR ; fi
- if [[ "${PACKAGE_NAME}" == "ANTsR" ]]; then export _R_CHECK_FORCE_SUGGESTS_=0 ;
  fi
- cat DESCRIPTION
- install_remotes_no_dep
- cat DESCRIPTION
- echo $PATH ;
- install_deps_no_suggests
- travis_run_cache
script:
- x=`export_clang_cxx`; eval ${x}
- travis_wait 100 R CMD build ${R_BUILD_ARGS} .
- rm -f travis_wait*.log
- PKG_TARBALL=$(ls -1t *.tar.gz | head -n 1)
- ls
- travis_wait 100 R CMD check ${R_CHECK_ARGS} "${PKG_TARBALL}"; CHECK_RET=$? ;
- rm -f travis_wait*.log
- if [[ $CHECK_RET -ne 0 ]]; then echo "R CMD check failed"; check_fail; dump_logs;
  travis_terminate 1; fi
- check_warnings
after_success:
- dump_logs
after_failure:
- dump_logs
before_deploy:
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then rm -f *.tar.gz; fi
deploy:
  provider: releases
  skip_cleanup: true
  file_glob: true
  file: "${PACKAGE_NAME}*.t*gz"
  on:
    tags: true
  api-key:
    secure: YiuFozIETSzerQUDQVD6pDut/Gn7ga3dY+lx4A18MvZrcsRfl+hK+NwZHn52ruiMr+CA3gVvoYc5LN3v+QO1Gz/Nn479wX2lSw5C3wNLzZdQsW7AeE0erZYy+ArmK1k9FfKzex+tqZNP68Dc0ygKiMU2R/o+7fYc0SOfCJPmS+yQiKpiTiELagmG76BWGSS5wI20Wowzoek69uEDiW1ZzkakZvDbA0BEgeXUxcBMhiyPha9Jh3aVczaIs8kwSd8vdZu3vBIpCnIrPwQPK/YxRd7JGlQVS/euPDN2GNDrgK77NzvYbPjdvQHf/O51wBQjsBVv+Z145Dlw25DomsWWW2kjgyZd5W2RV+4VbQJxsx1m4BJ8fho5hVt95gD9IDYRGv+rn8XRKGYcDWUPA16/2jPzGAxs7VyZHXNGhEz4ciitGNUqbm6F5bXfuvSZmriCW088Bjt8gEB6uHAI33CLZcjd+9Xq88+sXh9cs3hHEYlQZ2m6xhZ4S2E8XfRp93TNcm1Tl4T7NmFdCU/EEo3VulAajSEC5gY2mDayV4qtY0Kj3W0I+OqGk0pU1fmKdp0JrI+4DgkTHzi52nxdv+yk0pD7KIuPOoNBhx6M2CaeEb9xTTjZ72dHk2kLRs39wX/B6lgjhxq4gT86Ki3F7iSsJ7WGseMtN3VxCWnGCGxefls=
after_deploy:
- if [[ "${PACKAGE_NAME}" != "ANTsR" && "${PACKAGE_NAME}" != "ITKR" && "${PACKAGE_NAME}"
  != "ANTsRCore" ]]; then Rscript -e 'covr::coveralls(type = "all")' ; fi
